name: 'Continuous Integration'

on:
  create:
  pull_request:
  push:
    branches:
      - '[0-9]+.[0-9]+.x'
      - 'refs/pull/*'

env:
  PHP_EXTENSIONS: "mbstring, json, mongodb"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Create cache directory for php-cs-fixer"
        run: "mkdir -p .build/php-cs-fixer"

      - name: "Cache cache directory for php-cs-fixer"
        uses: "actions/cache@v2"
        with:
          path: ".build/php-cs-fixer"
          key: "php${{ matrix.php-version }}-php-cs-fixer"
          restore-keys: "php${{ matrix.php-version }}-php-cs-fixer"

      - name: "Run php-cs-fixer"
        env:
            PHP_CS_FIXER_IGNORE_ENV: 1
        run: "make cs"

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          # Add curl to send data to shepherd
          extensions: "${{ env.PHP_EXTENSIONS }}, curl"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "${{ matrix.php-version }}-composer"
          restore-keys: "${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Run phpstan"
        run: "make phpstan"

      - name: "Run psalm"
        run: "make psalm"

      - name: "Run phpmd"
        run: "make phpmd"

  tests:
    name: "Test (PHP ${{ matrix.php-version }}, symfony ${{ matrix.symfony }}, ${{ matrix.dependencies }})"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"
          - "8.1"

        dependencies:
          - "lowest"
          - "highest"

        symfony:
          - "5.4"
          - "6.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: 'Install Symfony Flex'
        run: "composer global require --prefer-dist --no-progress --ansi symfony/flex"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}"
          restore-keys: "php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}"

      - name: "Lock symfony version"
        run: "composer config extra.symfony.require ${{ matrix.symfony }}.*"

      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: "composer update --no-interaction --no-progress --prefer-lowest"

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: "composer update --no-interaction --no-progress"

      - name: "Run tests with phpunit"
        run: "make test"

  code-coverage:
    name: "Code Coverage"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Collect code coverage with pcov and phpunit"
        run: "make coverage"

      - name: "Send code coverage report to Codecov.io"
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
        run: "bash <(curl -s https://codecov.io/bash)"

  mutation-tests:
    name: "Mutation Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Run mutation tests with pcov and infection/infection"
        run: "make infection"

  composer:
    name: "Lint composer.json"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint composer.json"
        run: "make lint-composer"

  container:
    name: "Lint symfony container"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint container"
        run: "make lint-symfony-container"

  twig:
    name: "Lint twig files"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint twig files"
        run: "tools/console lint:twig src tests --format=github"

  xliff:
    name: "Lint XLIFF files"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint xliff files"
        run: "tools/console lint:xliff src tests --format=github"

  yaml:
    name: "Lint YML files"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer"
          restore-keys: "php${{ matrix.php-version }}-composer"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint yaml files"
        run: "tools/console lint:yaml src tests --format=github"
