name: 'Continuous Integration'

on:
  create:
  pull_request:
  push:
    branches:
      - "*.x"
    tags:
      - "**"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 8.0

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@2.16.0
        with:
          coverage: none
          extensions: "mbstring, json, mongodb"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2.1.7
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-
          restore-keys: |
            php${{ matrix.php-version }}-composer-

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run composer lint"
        run: make lint-composer

      - name: "Create cache directory for friendsofphp/php-cs-fixer"
        run: mkdir -p .build/php-cs-fixer

      - name: "Cache cache directory for friendsofphp/php-cs-fixer"
        uses: actions/cache@v2.1.7
        with:
          path: .build/php-cs-fixer
          key: php${{ matrix.php-version }}-php-cs-fixer-
          restore-keys: |
            php${{ matrix.php-version }}-php-cs-fixer-

      - name: "Run friendsofphp/php-cs-fixer"
        env:
            PHP_CS_FIXER_IGNORE_ENV: 1
        run: make cs

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 8.0

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@2.16.0
        with:
          coverage: none
          extensions: "mbstring, json, mongodb"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2.1.7
        with:
          path: ~/.composer/cache
          key: ${{ matrix.php-version }}-composer-
          restore-keys: |
            ${{ matrix.php-version }}-composer-

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run phpstan/phpstan"
        run: make phpstan

      - name: "Run psalm"
        run: make psalm

      - name: "Run phpmd"
        run: make phpmd

  tests:
    name: "Test (PHP ${{ matrix.php-version }}, symfony ${{ matrix.symfony }}, ${{ matrix.dependencies }})"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 8.0
          - 8.1

        dependencies:
          - lowest
          - highest

        symfony:
          - 5.4

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@2.16.0
        with:
          coverage: none
          extensions: "mbstring, json, mongodb"
          php-version: ${{ matrix.php-version }}

      - name: 'Install Symfony Flex'
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi symfony/flex

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2.1.7
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: "Lock symfony version"
        run: composer config extra.symfony.require "${{ matrix.symfony }}.*"

      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: composer update --no-interaction --no-progress --no-suggest --prefer-lowest

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: composer update --no-interaction --no-progress --no-suggest

      - name: "Run tests with phpunit/phpunit"
        run: make test

  code-coverage:
    name: "Code Coverage"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 8.0

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@2.16.0
        with:
          coverage: pcov
          extensions: "mbstring, json, mongodb"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2.1.7
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-
          restore-keys: |
            php${{ matrix.php-version }}-composer-

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Collect code coverage with pcov and phpunit/phpunit"
        run: make coverage

      - name: "Send code coverage report to Codecov.io"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)

  mutation-tests:
    name: "Mutation Tests"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 8.0

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@2.16.0
        with:
          coverage: pcov
          extensions: "mbstring, json, mongodb"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v2.1.7
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-
          restore-keys: |
            php${{ matrix.php-version }}-composer-

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run mutation tests with pcov and infection/infection"
        run: make infection
